#! /usr/bin/python3
# popout3d_spawn.py
# Version as popout3d.py

import os, sys, shlex, subprocess #V1.5.0 add shlex, subprocess
from PIL import Image

workfold = sys.argv[1] ; myfold = sys.argv[2] ; lockfile = sys.argv[3] ; quitfile = sys.argv[4] #V1.5.0
alignfile = 'align.txt'

if os.path.isfile(workfold+lockfile):
    exit # lock exists so something already running
else:
    #V1.5.0 delete files from previous run
    for wholefilename in os.listdir(workfold):
        fn, fx = os.path.splitext(wholefilename) 
        if (fx == '.tif' or fx == '.view' or fx == '.ctrl' or fx == '.txt') :
            os.remove(workfold+wholefilename)
    with open(workfold+lockfile, 'w') as fn: # create lock
        fn.write('')    
    
#---------------------------------------
# each loop does one pair of images

# 'example0+1AL.JPG.lock'
for wholefilename in os.listdir(workfold):            
    #V1.5.0 quit
    x=False
    if os.path.isfile(workfold+quitfile):
        x=True  
        break
    # 'example0+1AL.JPG' '.lock'
    filename, flag = os.path.splitext(wholefilename)

    if flag == '.queue':

        #---------------------------------------
        # parse filename
        name, ext = os.path.splitext(filename)     # 'example0+1AL' '.JPG'
        origname  = name[0:-5]                     # 'example'
        left      = name[-5] ; right = name[-3]    # '0' '1'
        formlet   = name[-2] ; stylelet = name[-1] # 'A' 'L'

        if stylelet == 'L':
            stylecode = 'A'
        else:
            stylecode = 'P'
        
        #---------------------------------------
        # compose variables then call align_image_stack
        fileout   = origname+left+'+'+right+formlet+stylelet+ext
        fileleft  = origname+left+ext
        fileright = origname+right+ext
        command   = 'align_image_stack -a "'+workfold+fileout+'" -m -i -'+stylecode+' -C "'+myfold+fileright+'" "'+myfold+fileleft+'"'
 
        '''#V1.5.0 no process panel, so don't move from queue to process
        #create .process file and delete .queue file
        with open(workfold+fileout+'.process', 'w') as fn:
            fn.write('')
        
        if os.path.isfile(workfold+fileout+'.queue'):
            os.remove(workfold+fileout+'.queue')   
        '''
        
        # run alignment program

        #result = os.system(command) #V1.5
        args = shlex.split(command) 
        result = subprocess.run(args)
        #
               
        if result != 0:
            print (result)
            with open(workfold+alignfile, 'w') as fn:
                fn.write(str(result))

        #---------------------------------------
        # merge the files, put result in myfold

        # load left and right images
        image_left = Image.open(workfold+fileout+'0001.tif')
        image_right = Image.open(workfold+fileout+'0000.tif')
        image_left.load() ; image_right.load()

        if formlet == 'A':
            # separate the colours
            image_red, junk1, junk2, transparency_mask = image_left.split()
            junk3, image_green, image_blue, junk4 = image_right.split()
            # merge the appropriate colours into 3D image
            #image_new = Image.merge('RGBA', (image_red, image_green, image_blue, transparency_mask)) #V1.5
            image_new = Image.merge('RGB', (image_red, image_green, image_blue))
            
        elif formlet == 'S':
            image_width = int(image_left.size[0]) ; image_height = int(image_left.size[1])
            # create double-width blank new image
            image_new = Image.new('RGB', (image_width * 2, image_height), color=0)
            # paste left image into new image on the left
            image_new.paste(image_left, (0, 0, image_width, image_height)) #V4.2.1 image_ was missing from image_left
            # paste right image into new image on the right
            image_new.paste(image_right, (image_width, 0, 2 * image_width, image_height))

        else : # Crossover
            image_width = int(image_left.size[0]) ; image_height = int(image_left.size[1])
            # create double-width blank new image
            image_new = Image.new('RGB', (image_width * 2, image_height), color=0)
            # paste right image into new image on the left
            image_new.paste(image_right, (0, 0, image_width, image_height))
            # paste left image into new image on the right
            image_new.paste(image_left, (image_width, 0, 2 * image_width, image_height))

        # save new image, write .view file, remove process file and aligned images
        image_new.save(myfold+'3D'+fileout)

        with open(workfold+fileout+'.view', 'w') as fn:
            fn.write('')

        '''V1.5.0 No process panel, remove queue file instead
        if os.path.isfile(workfold+fileout+'.process'):
            os.remove(workfold+fileout+'.process')
        '''
        if os.path.isfile(workfold+fileout+'.queue'):
            os.remove(workfold+fileout+'.queue')
        #
        
        # delete intermediate files
        if os.path.isfile(workfold+fileout+'0001.tif'):
            os.remove(workfold+fileout+'0001.tif')
        if os.path.isfile(workfold+fileout+'0000.tif'):
            os.remove(workfold+fileout+'0000.tif') 
        print (x)
#---------------------------------------
'''#V1.5.0 delete files from previous run
# finished so delete spawn lock
if os.path.isfile(workfold+lockfile):
    os.remove(workfold+lockfile)
'''    
# leave *.tif in case align-image-stack is still going
# leave errorfile so problems can be checked    
for wholefilename in os.listdir(workfold):
    fn, fx = os.path.splitext(wholefilename) 
    if (fx == '.queue' or fx == '.view' or fx == '.ctrl') :
        os.remove(workfold+wholefilename)

exit(0)
